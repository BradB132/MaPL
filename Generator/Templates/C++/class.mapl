#import "../../Executable/MaPLGeneratorAPI.mapl"

Schema schema = (Schema)inParameters["schema"];
SchemaClass schemaClass = (SchemaClass)inParameters["class"];

string outputDir = commandLineFlag("cppOutputDir");
string schemaNamespace = schema.namespace;
string className = schemaClass.name;
string headerOutputPath = outputDir + "/" + schemaNamespace + "/" + className + ".h";
string implOutputPath = outputDir + "/" + schemaNamespace + "/" + className + ".cpp";

// NOTE: Base files are where the generator user can augment the generated files with their own code.
// Only write these files when they don't already exist to avoid overwriting human-written code.
if !fileExistsAtPath(headerOutputPath) {
    outputToFile(headerOutputPath);
    <?// Generated by MaPLGenerator, based on the '${schemaNamespace}::${className}' schema.

#ifndef ${schemaNamespace}_${className}_h
#define ${schemaNamespace}_${className}_h

#include "${schemaNamespace}Namespace.h"

namespace ${schemaNamespace} {

    class ${className} : public ${className}_base {
        // Custom logic for ${schemaNamespace}::${className} can go here.
    };

} /* ${schemaNamespace} namespace */

#endif /* ${schemaNamespace}_${className}_h */
?>
}

if !fileExistsAtPath(implOutputPath) {
    outputToFile(implOutputPath);
    <?// Generated by MaPLGenerator, based on the '${schemaNamespace}::${className}' schema.

// Custom logic for ${schemaNamespace}::${className} can go here.
?>
}
