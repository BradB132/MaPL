namespace Example;

// In this example some special serialization code might be added to a class
// which is the root object. That is communicated to the template via annotation.
@root class Container {
    Content contents[];
}

class Content {
    char varA;
    int32 varB[] = 5, 7, 9, 13, 23, 1234;
    int64 varC = 6;
    uint32 varD = 7;
    uint64 varE = 8;
    float32 varF = 5.6;
    float64 varG = 7.8;
    bool varH = false;
    string varI = "abcd" : /[a-f]+/; // Use regex patterns to restrict the formatting of the values.
    UID varJ;
    reference<Content> varK = "zxcv";
    TestEnum varL = B;
    
    // In this example a property was renamed, but the original name must be
    // maintained for backward compatibility. For a situation like this, pass
    // the name in via annotation key and value.
    @originalName=child ContentChild contentChild;
}

class ContentChild {
    // In this example a string contained within the data is annotated as one which
    // is visible to the user. A special template can search for this annotation
    // and pull out these values into a separate file for easier translation.
    @localized string name;
}

class ContentChildSubclass : ContentChild {
    int32 number;
}

enum TestEnum {
    A,
    B,
    C,
}
