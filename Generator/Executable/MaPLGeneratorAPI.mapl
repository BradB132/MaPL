
// Data Structures.
#type Array<T> {
    readonly T[uint32];
    readonly uint32 count;
}

#type ArrayMap<T> : Array<T> {
    readonly T[string];
    bool contains(string key);
}

// Schema.
#global readonly Schema schema;

#type Schema {
    readonly ArrayMap<SchemaEnum> enums;
    readonly ArrayMap<SchemaClass> classes;
}

#type SchemaEnum {
    readonly string name;
    readonly string[uint32];
    readonly uint32 count;
    readonly ArrayMap<string> annotations;
}

#type SchemaClass {
    readonly string name;
    readonly string superclass;
    readonly ArrayMap<SchemaAttribute> attributes;
    readonly ArrayMap<string> annotations;
}

#type SchemaAttribute {
    readonly string name;
    readonly string typeName;
    readonly bool typeIsUIDReference;
    readonly bool isPrimitiveType;
    readonly ArrayMap<string> annotations;
    readonly Array<string> defaultValues;
    readonly uint32 minOccurrences;
    readonly uint32 maxOccurrences;
}

// XML.
#global readonly Array<XMLFile> xmlFiles;

#type XMLFile {
    readonly XMLNode rootNode;
    readonly string outputPath;
}

#type XMLNode {
    readonly string name;
    readonly Array<XMLAttribute> attributes;
    readonly Array<XMLNode> children;
}

#type XMLAttribute {
    readonly string name;
    readonly string value;
}

// File IO.
#global void outputToFile(string filePath);
#global void writeToFile(...); // Writes the byte representation of the parameters to file, in parameter order.

// Misc utilities.
#global void executeMaPLScript(string filePath);
#global bool commandLineFlagEnabled(string flagName);
#global string pluralize(string singular);
#global uint32 hash(string plaintext);
